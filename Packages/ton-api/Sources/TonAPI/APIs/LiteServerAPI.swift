//
// LiteServerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class LiteServerAPI {

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: GetAllRawShardsInfo200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getAllRawShardsInfo(blockId: String) async throws -> GetAllRawShardsInfo200Response {
        return try await getAllRawShardsInfoWithRequestBuilder(blockId: blockId).execute().body
    }

    /**
     - GET /v2/liteserver/get_all_shards_info/{block_id}
     - Get all raw shards info
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: RequestBuilder<GetAllRawShardsInfo200Response> 
     */
    open class func getAllRawShardsInfoWithRequestBuilder(blockId: String) -> RequestBuilder<GetAllRawShardsInfo200Response> {
        var localVariablePath = "/v2/liteserver/get_all_shards_info/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAllRawShardsInfo200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - returns: GetOutMsgQueueSizes200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getOutMsgQueueSizes() async throws -> GetOutMsgQueueSizes200Response {
        return try await getOutMsgQueueSizesWithRequestBuilder().execute().body
    }

    /**
     - GET /v2/liteserver/get_out_msg_queue_sizes
     - Get out msg queue sizes
     - returns: RequestBuilder<GetOutMsgQueueSizes200Response> 
     */
    open class func getOutMsgQueueSizesWithRequestBuilder() -> RequestBuilder<GetOutMsgQueueSizes200Response> {
        let localVariablePath = "/v2/liteserver/get_out_msg_queue_sizes"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetOutMsgQueueSizes200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter accountId: (path) account ID 
     - parameter targetBlock: (query) target block: (workchain,shard,seqno,root_hash,file_hash) (optional)
     - returns: GetRawAccountState200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawAccountState(accountId: String, targetBlock: String? = nil) async throws -> GetRawAccountState200Response {
        return try await getRawAccountStateWithRequestBuilder(accountId: accountId, targetBlock: targetBlock).execute().body
    }

    /**
     - GET /v2/liteserver/get_account_state/{account_id}
     - Get raw account state
     - parameter accountId: (path) account ID 
     - parameter targetBlock: (query) target block: (workchain,shard,seqno,root_hash,file_hash) (optional)
     - returns: RequestBuilder<GetRawAccountState200Response> 
     */
    open class func getRawAccountStateWithRequestBuilder(accountId: String, targetBlock: String? = nil) -> RequestBuilder<GetRawAccountState200Response> {
        var localVariablePath = "/v2/liteserver/get_account_state/{account_id}"
        let accountIdPreEscape = "\(APIHelper.mapValueToPathItem(accountId))"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{account_id}", with: accountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "target_block": (wrappedValue: targetBlock?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawAccountState200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter knownBlock: (query) known block: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - parameter targetBlock: (query) target block: (workchain,shard,seqno,root_hash,file_hash) (optional)
     - returns: GetRawBlockProof200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawBlockProof(knownBlock: String, mode: Int, targetBlock: String? = nil) async throws -> GetRawBlockProof200Response {
        return try await getRawBlockProofWithRequestBuilder(knownBlock: knownBlock, mode: mode, targetBlock: targetBlock).execute().body
    }

    /**
     - GET /v2/liteserver/get_block_proof
     - Get raw block proof
     - parameter knownBlock: (query) known block: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - parameter targetBlock: (query) target block: (workchain,shard,seqno,root_hash,file_hash) (optional)
     - returns: RequestBuilder<GetRawBlockProof200Response> 
     */
    open class func getRawBlockProofWithRequestBuilder(knownBlock: String, mode: Int, targetBlock: String? = nil) -> RequestBuilder<GetRawBlockProof200Response> {
        let localVariablePath = "/v2/liteserver/get_block_proof"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "known_block": (wrappedValue: knownBlock.encodeToJSON(), isExplode: true),
            "target_block": (wrappedValue: targetBlock?.encodeToJSON(), isExplode: true),
            "mode": (wrappedValue: mode.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawBlockProof200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: GetRawBlockchainBlock200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawBlockchainBlock(blockId: String) async throws -> GetRawBlockchainBlock200Response {
        return try await getRawBlockchainBlockWithRequestBuilder(blockId: blockId).execute().body
    }

    /**
     - GET /v2/liteserver/get_block/{block_id}
     - Get raw blockchain block
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: RequestBuilder<GetRawBlockchainBlock200Response> 
     */
    open class func getRawBlockchainBlockWithRequestBuilder(blockId: String) -> RequestBuilder<GetRawBlockchainBlock200Response> {
        var localVariablePath = "/v2/liteserver/get_block/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawBlockchainBlock200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - returns: GetRawBlockchainBlockHeader200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawBlockchainBlockHeader(blockId: String, mode: Int) async throws -> GetRawBlockchainBlockHeader200Response {
        return try await getRawBlockchainBlockHeaderWithRequestBuilder(blockId: blockId, mode: mode).execute().body
    }

    /**
     - GET /v2/liteserver/get_block_header/{block_id}
     - Get raw blockchain block header
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - returns: RequestBuilder<GetRawBlockchainBlockHeader200Response> 
     */
    open class func getRawBlockchainBlockHeaderWithRequestBuilder(blockId: String, mode: Int) -> RequestBuilder<GetRawBlockchainBlockHeader200Response> {
        var localVariablePath = "/v2/liteserver/get_block_header/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "mode": (wrappedValue: mode.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawBlockchainBlockHeader200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: GetRawBlockchainBlockState200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawBlockchainBlockState(blockId: String) async throws -> GetRawBlockchainBlockState200Response {
        return try await getRawBlockchainBlockStateWithRequestBuilder(blockId: blockId).execute().body
    }

    /**
     - GET /v2/liteserver/get_state/{block_id}
     - Get raw blockchain block state
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: RequestBuilder<GetRawBlockchainBlockState200Response> 
     */
    open class func getRawBlockchainBlockStateWithRequestBuilder(blockId: String) -> RequestBuilder<GetRawBlockchainBlockState200Response> {
        var localVariablePath = "/v2/liteserver/get_state/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawBlockchainBlockState200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - returns: GetRawConfig200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawConfig(blockId: String, mode: Int) async throws -> GetRawConfig200Response {
        return try await getRawConfigWithRequestBuilder(blockId: blockId, mode: mode).execute().body
    }

    /**
     - GET /v2/liteserver/get_config_all/{block_id}
     - Get raw config
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - returns: RequestBuilder<GetRawConfig200Response> 
     */
    open class func getRawConfigWithRequestBuilder(blockId: String, mode: Int) -> RequestBuilder<GetRawConfig200Response> {
        var localVariablePath = "/v2/liteserver/get_config_all/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "mode": (wrappedValue: mode.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawConfig200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - parameter count: (query) count 
     - parameter accountId: (query) account ID (optional)
     - parameter lt: (query) lt (optional)
     - returns: GetRawListBlockTransactions200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawListBlockTransactions(blockId: String, mode: Int, count: Int, accountId: String? = nil, lt: Int64? = nil) async throws -> GetRawListBlockTransactions200Response {
        return try await getRawListBlockTransactionsWithRequestBuilder(blockId: blockId, mode: mode, count: count, accountId: accountId, lt: lt).execute().body
    }

    /**
     - GET /v2/liteserver/list_block_transactions/{block_id}
     - Get raw list block transactions
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter mode: (query) mode 
     - parameter count: (query) count 
     - parameter accountId: (query) account ID (optional)
     - parameter lt: (query) lt (optional)
     - returns: RequestBuilder<GetRawListBlockTransactions200Response> 
     */
    open class func getRawListBlockTransactionsWithRequestBuilder(blockId: String, mode: Int, count: Int, accountId: String? = nil, lt: Int64? = nil) -> RequestBuilder<GetRawListBlockTransactions200Response> {
        var localVariablePath = "/v2/liteserver/list_block_transactions/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "mode": (wrappedValue: mode.encodeToJSON(), isExplode: true),
            "count": (wrappedValue: count.encodeToJSON(), isExplode: true),
            "account_id": (wrappedValue: accountId?.encodeToJSON(), isExplode: false),
            "lt": (wrappedValue: lt?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawListBlockTransactions200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - returns: GetRawMasterchainInfo200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawMasterchainInfo() async throws -> GetRawMasterchainInfo200Response {
        return try await getRawMasterchainInfoWithRequestBuilder().execute().body
    }

    /**
     - GET /v2/liteserver/get_masterchain_info
     - Get raw masterchain info
     - returns: RequestBuilder<GetRawMasterchainInfo200Response> 
     */
    open class func getRawMasterchainInfoWithRequestBuilder() -> RequestBuilder<GetRawMasterchainInfo200Response> {
        let localVariablePath = "/v2/liteserver/get_masterchain_info"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawMasterchainInfo200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter mode: (query) mode 
     - returns: GetRawMasterchainInfoExt200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawMasterchainInfoExt(mode: Int) async throws -> GetRawMasterchainInfoExt200Response {
        return try await getRawMasterchainInfoExtWithRequestBuilder(mode: mode).execute().body
    }

    /**
     - GET /v2/liteserver/get_masterchain_info_ext
     - Get raw masterchain info ext
     - parameter mode: (query) mode 
     - returns: RequestBuilder<GetRawMasterchainInfoExt200Response> 
     */
    open class func getRawMasterchainInfoExtWithRequestBuilder(mode: Int) -> RequestBuilder<GetRawMasterchainInfoExt200Response> {
        let localVariablePath = "/v2/liteserver/get_masterchain_info_ext"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "mode": (wrappedValue: mode.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawMasterchainInfoExt200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: GetRawShardBlockProof200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawShardBlockProof(blockId: String) async throws -> GetRawShardBlockProof200Response {
        return try await getRawShardBlockProofWithRequestBuilder(blockId: blockId).execute().body
    }

    /**
     - GET /v2/liteserver/get_shard_block_proof/{block_id}
     - Get raw shard block proof
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - returns: RequestBuilder<GetRawShardBlockProof200Response> 
     */
    open class func getRawShardBlockProofWithRequestBuilder(blockId: String) -> RequestBuilder<GetRawShardBlockProof200Response> {
        var localVariablePath = "/v2/liteserver/get_shard_block_proof/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawShardBlockProof200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter workchain: (query) workchain 
     - parameter shard: (query) shard 
     - parameter exact: (query) exact 
     - returns: GetRawShardInfo200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawShardInfo(blockId: String, workchain: Int, shard: Int64, exact: Bool) async throws -> GetRawShardInfo200Response {
        return try await getRawShardInfoWithRequestBuilder(blockId: blockId, workchain: workchain, shard: shard, exact: exact).execute().body
    }

    /**
     - GET /v2/liteserver/get_shard_info/{block_id}
     - Get raw shard info
     - parameter blockId: (path) block ID: (workchain,shard,seqno,root_hash,file_hash) 
     - parameter workchain: (query) workchain 
     - parameter shard: (query) shard 
     - parameter exact: (query) exact 
     - returns: RequestBuilder<GetRawShardInfo200Response> 
     */
    open class func getRawShardInfoWithRequestBuilder(blockId: String, workchain: Int, shard: Int64, exact: Bool) -> RequestBuilder<GetRawShardInfo200Response> {
        var localVariablePath = "/v2/liteserver/get_shard_info/{block_id}"
        let blockIdPreEscape = "\(APIHelper.mapValueToPathItem(blockId))"
        let blockIdPostEscape = blockIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{block_id}", with: blockIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "workchain": (wrappedValue: workchain.encodeToJSON(), isExplode: true),
            "shard": (wrappedValue: shard.encodeToJSON(), isExplode: true),
            "exact": (wrappedValue: exact.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawShardInfo200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - returns: GetRawTime200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawTime() async throws -> GetRawTime200Response {
        return try await getRawTimeWithRequestBuilder().execute().body
    }

    /**
     - GET /v2/liteserver/get_time
     - Get raw time
     - returns: RequestBuilder<GetRawTime200Response> 
     */
    open class func getRawTimeWithRequestBuilder() -> RequestBuilder<GetRawTime200Response> {
        let localVariablePath = "/v2/liteserver/get_time"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawTime200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter accountId: (path) account ID 
     - parameter count: (query) count 
     - parameter lt: (query) lt 
     - parameter hash: (query) hash 
     - returns: GetRawTransactions200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getRawTransactions(accountId: String, count: Int, lt: Int64, hash: String) async throws -> GetRawTransactions200Response {
        return try await getRawTransactionsWithRequestBuilder(accountId: accountId, count: count, lt: lt, hash: hash).execute().body
    }

    /**
     - GET /v2/liteserver/get_transactions/{account_id}
     - Get raw transactions
     - parameter accountId: (path) account ID 
     - parameter count: (query) count 
     - parameter lt: (query) lt 
     - parameter hash: (query) hash 
     - returns: RequestBuilder<GetRawTransactions200Response> 
     */
    open class func getRawTransactionsWithRequestBuilder(accountId: String, count: Int, lt: Int64, hash: String) -> RequestBuilder<GetRawTransactions200Response> {
        var localVariablePath = "/v2/liteserver/get_transactions/{account_id}"
        let accountIdPreEscape = "\(APIHelper.mapValueToPathItem(accountId))"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{account_id}", with: accountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "count": (wrappedValue: count.encodeToJSON(), isExplode: true),
            "lt": (wrappedValue: lt.encodeToJSON(), isExplode: true),
            "hash": (wrappedValue: hash.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRawTransactions200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter sendRawMessageRequest: (body) Data that is expected 
     - returns: SendRawMessage200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func sendRawMessage(sendRawMessageRequest: SendRawMessageRequest) async throws -> SendRawMessage200Response {
        return try await sendRawMessageWithRequestBuilder(sendRawMessageRequest: sendRawMessageRequest).execute().body
    }

    /**
     - POST /v2/liteserver/send_message
     - Send raw message to blockchain
     - parameter sendRawMessageRequest: (body) Data that is expected 
     - returns: RequestBuilder<SendRawMessage200Response> 
     */
    open class func sendRawMessageWithRequestBuilder(sendRawMessageRequest: SendRawMessageRequest) -> RequestBuilder<SendRawMessage200Response> {
        let localVariablePath = "/v2/liteserver/send_message"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sendRawMessageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SendRawMessage200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
