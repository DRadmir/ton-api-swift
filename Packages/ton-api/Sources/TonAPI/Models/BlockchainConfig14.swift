//
// BlockchainConfig14.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The reward in nanoTons for block creation in the TON blockchain. */
public struct BlockchainConfig14: Codable, JSONEncodable, Hashable {

    public var masterchainBlockFee: Int64
    public var basechainBlockFee: Int64

    public init(masterchainBlockFee: Int64, basechainBlockFee: Int64) {
        self.masterchainBlockFee = masterchainBlockFee
        self.basechainBlockFee = basechainBlockFee
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case masterchainBlockFee = "masterchain_block_fee"
        case basechainBlockFee = "basechain_block_fee"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(masterchainBlockFee, forKey: .masterchainBlockFee)
        try container.encode(basechainBlockFee, forKey: .basechainBlockFee)
    }
}

