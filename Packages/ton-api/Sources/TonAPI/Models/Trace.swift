//
// Trace.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Trace: Codable, JSONEncodable, Hashable {

    public var transaction: Transaction
    public var interfaces: [String]
    public var children: [Trace]?
    public var emulated: Bool?

    public init(transaction: Transaction, interfaces: [String], children: [Trace]? = nil, emulated: Bool? = nil) {
        self.transaction = transaction
        self.interfaces = interfaces
        self.children = children
        self.emulated = emulated
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case transaction
        case interfaces
        case children
        case emulated
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(transaction, forKey: .transaction)
        try container.encode(interfaces, forKey: .interfaces)
        try container.encodeIfPresent(children, forKey: .children)
        try container.encodeIfPresent(emulated, forKey: .emulated)
    }
}

