//
// TvmStackRecord.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TvmStackRecord: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case cell = "cell"
        case num = "num"
        case nan = "nan"
        case null = "null"
        case tuple = "tuple"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var type: ModelType
    public var cell: String?
    public var slice: String?
    public var num: String?
    public var tuple: [TvmStackRecord]?

    public init(type: ModelType, cell: String? = nil, slice: String? = nil, num: String? = nil, tuple: [TvmStackRecord]? = nil) {
        self.type = type
        self.cell = cell
        self.slice = slice
        self.num = num
        self.tuple = tuple
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case cell
        case slice
        case num
        case tuple
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(cell, forKey: .cell)
        try container.encodeIfPresent(slice, forKey: .slice)
        try container.encodeIfPresent(num, forKey: .num)
        try container.encodeIfPresent(tuple, forKey: .tuple)
    }
}

