//
// SmartContractAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SmartContractAction: Codable, JSONEncodable, Hashable {

    public var executor: AccountAddress
    public var contract: AccountAddress
    /** amount in nanotons */
    public var tonAttached: Int64
    public var operation: String
    public var payload: String?
    public var refund: Refund?

    public init(executor: AccountAddress, contract: AccountAddress, tonAttached: Int64, operation: String, payload: String? = nil, refund: Refund? = nil) {
        self.executor = executor
        self.contract = contract
        self.tonAttached = tonAttached
        self.operation = operation
        self.payload = payload
        self.refund = refund
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case executor
        case contract
        case tonAttached = "ton_attached"
        case operation
        case payload
        case refund
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(executor, forKey: .executor)
        try container.encode(contract, forKey: .contract)
        try container.encode(tonAttached, forKey: .tonAttached)
        try container.encode(operation, forKey: .operation)
        try container.encodeIfPresent(payload, forKey: .payload)
        try container.encodeIfPresent(refund, forKey: .refund)
    }
}

