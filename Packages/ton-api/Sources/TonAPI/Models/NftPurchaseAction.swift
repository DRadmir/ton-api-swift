//
// NftPurchaseAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NftPurchaseAction: Codable, JSONEncodable, Hashable {

    public enum AuctionType: String, Codable, CaseIterable, CaseIterableDefaultsLast {
        case dnsPeriodTon = "DNS.ton"
        case dnsPeriodTg = "DNS.tg"
        case numberPeriodTg = "NUMBER.tg"
        case getgems = "getgems"
        case unknownDefaultOpenApi = "unknown_default_open_api"
    }
    public var auctionType: AuctionType
    public var amount: Price
    public var nft: NftItem
    public var seller: AccountAddress
    public var buyer: AccountAddress

    public init(auctionType: AuctionType, amount: Price, nft: NftItem, seller: AccountAddress, buyer: AccountAddress) {
        self.auctionType = auctionType
        self.amount = amount
        self.nft = nft
        self.seller = seller
        self.buyer = buyer
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case auctionType = "auction_type"
        case amount
        case nft
        case seller
        case buyer
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(auctionType, forKey: .auctionType)
        try container.encode(amount, forKey: .amount)
        try container.encode(nft, forKey: .nft)
        try container.encode(seller, forKey: .seller)
        try container.encode(buyer, forKey: .buyer)
    }
}

