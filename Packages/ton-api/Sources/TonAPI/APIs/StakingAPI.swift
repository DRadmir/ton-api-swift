//
// StakingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StakingAPI {

    /**

     - parameter accountId: (path) account ID 
     - returns: AccountStaking
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getAccountNominatorsPools(accountId: String) async throws -> AccountStaking {
        return try await getAccountNominatorsPoolsWithRequestBuilder(accountId: accountId).execute().body
    }

    /**
     - GET /v2/staking/nominator/{account_id}/pools
     - All pools where account participates
     - parameter accountId: (path) account ID 
     - returns: RequestBuilder<AccountStaking> 
     */
    open class func getAccountNominatorsPoolsWithRequestBuilder(accountId: String) -> RequestBuilder<AccountStaking> {
        var localVariablePath = "/v2/staking/nominator/{account_id}/pools"
        let accountIdPreEscape = "\(APIHelper.mapValueToPathItem(accountId))"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{account_id}", with: accountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AccountStaking>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter accountId: (path) account ID 
     - returns: GetStakingPoolHistory200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStakingPoolHistory(accountId: String) async throws -> GetStakingPoolHistory200Response {
        return try await getStakingPoolHistoryWithRequestBuilder(accountId: accountId).execute().body
    }

    /**
     - GET /v2/staking/pool/{account_id}/history
     - Pool history
     - parameter accountId: (path) account ID 
     - returns: RequestBuilder<GetStakingPoolHistory200Response> 
     */
    open class func getStakingPoolHistoryWithRequestBuilder(accountId: String) -> RequestBuilder<GetStakingPoolHistory200Response> {
        var localVariablePath = "/v2/staking/pool/{account_id}/history"
        let accountIdPreEscape = "\(APIHelper.mapValueToPathItem(accountId))"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{account_id}", with: accountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetStakingPoolHistory200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter accountId: (path) account ID 
     - parameter acceptLanguage: (header)  (optional, default to "en")
     - returns: GetStakingPoolInfo200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStakingPoolInfo(accountId: String, acceptLanguage: String? = nil) async throws -> GetStakingPoolInfo200Response {
        return try await getStakingPoolInfoWithRequestBuilder(accountId: accountId, acceptLanguage: acceptLanguage).execute().body
    }

    /**
     - GET /v2/staking/pool/{account_id}
     - Stacking pool info
     - parameter accountId: (path) account ID 
     - parameter acceptLanguage: (header)  (optional, default to "en")
     - returns: RequestBuilder<GetStakingPoolInfo200Response> 
     */
    open class func getStakingPoolInfoWithRequestBuilder(accountId: String, acceptLanguage: String? = nil) -> RequestBuilder<GetStakingPoolInfo200Response> {
        var localVariablePath = "/v2/staking/pool/{account_id}"
        let accountIdPreEscape = "\(APIHelper.mapValueToPathItem(accountId))"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{account_id}", with: accountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetStakingPoolInfo200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter availableFor: (query) account ID (optional)
     - parameter includeUnverified: (query) return also pools not from white list - just compatible by interfaces (maybe dangerous!) (optional)
     - parameter acceptLanguage: (header)  (optional, default to "en")
     - returns: GetStakingPools200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStakingPools(availableFor: String? = nil, includeUnverified: Bool? = nil, acceptLanguage: String? = nil) async throws -> GetStakingPools200Response {
        return try await getStakingPoolsWithRequestBuilder(availableFor: availableFor, includeUnverified: includeUnverified, acceptLanguage: acceptLanguage).execute().body
    }

    /**
     - GET /v2/staking/pools
     - All pools available in network
     - parameter availableFor: (query) account ID (optional)
     - parameter includeUnverified: (query) return also pools not from white list - just compatible by interfaces (maybe dangerous!) (optional)
     - parameter acceptLanguage: (header)  (optional, default to "en")
     - returns: RequestBuilder<GetStakingPools200Response> 
     */
    open class func getStakingPoolsWithRequestBuilder(availableFor: String? = nil, includeUnverified: Bool? = nil, acceptLanguage: String? = nil) -> RequestBuilder<GetStakingPools200Response> {
        let localVariablePath = "/v2/staking/pools"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "available_for": (wrappedValue: availableFor?.encodeToJSON(), isExplode: true),
            "include_unverified": (wrappedValue: includeUnverified?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetStakingPools200Response>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
