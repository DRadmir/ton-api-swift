//
// JettonBurnAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct JettonBurnAction: Codable, JSONEncodable, Hashable {

    public var sender: AccountAddress
    public var sendersWallet: String
    /** amount in quanta of tokens */
    public var amount: String
    public var jetton: JettonPreview

    public init(sender: AccountAddress, sendersWallet: String, amount: String, jetton: JettonPreview) {
        self.sender = sender
        self.sendersWallet = sendersWallet
        self.amount = amount
        self.jetton = jetton
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sender
        case sendersWallet = "senders_wallet"
        case amount
        case jetton
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sender, forKey: .sender)
        try container.encode(sendersWallet, forKey: .sendersWallet)
        try container.encode(amount, forKey: .amount)
        try container.encode(jetton, forKey: .jetton)
    }
}

