//
// BlockParamLimits.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BlockParamLimits: Codable, JSONEncodable, Hashable {

    public var underload: Int64
    public var softLimit: Int64
    public var hardLimit: Int64

    public init(underload: Int64, softLimit: Int64, hardLimit: Int64) {
        self.underload = underload
        self.softLimit = softLimit
        self.hardLimit = hardLimit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case underload
        case softLimit = "soft_limit"
        case hardLimit = "hard_limit"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(underload, forKey: .underload)
        try container.encode(softLimit, forKey: .softLimit)
        try container.encode(hardLimit, forKey: .hardLimit)
    }
}

