//
// Account.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Account: Codable, JSONEncodable, Hashable {

    public var address: String
    public var balance: Int64
    /** {'USD': 1, 'IDR': 1000} */
    public var currenciesBalance: [String: AnyCodable]?
    /** unix timestamp */
    public var lastActivity: Int64
    public var status: AccountStatus
    public var interfaces: [String]?
    public var name: String?
    public var isScam: Bool?
    public var icon: String?
    public var memoRequired: Bool?
    public var getMethods: [String]
    public var isSuspended: Bool?
    public var isWallet: Bool

    public init(address: String, balance: Int64, currenciesBalance: [String: AnyCodable]? = nil, lastActivity: Int64, status: AccountStatus, interfaces: [String]? = nil, name: String? = nil, isScam: Bool? = nil, icon: String? = nil, memoRequired: Bool? = nil, getMethods: [String], isSuspended: Bool? = nil, isWallet: Bool) {
        self.address = address
        self.balance = balance
        self.currenciesBalance = currenciesBalance
        self.lastActivity = lastActivity
        self.status = status
        self.interfaces = interfaces
        self.name = name
        self.isScam = isScam
        self.icon = icon
        self.memoRequired = memoRequired
        self.getMethods = getMethods
        self.isSuspended = isSuspended
        self.isWallet = isWallet
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case balance
        case currenciesBalance = "currencies_balance"
        case lastActivity = "last_activity"
        case status
        case interfaces
        case name
        case isScam = "is_scam"
        case icon
        case memoRequired = "memo_required"
        case getMethods = "get_methods"
        case isSuspended = "is_suspended"
        case isWallet = "is_wallet"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(address, forKey: .address)
        try container.encode(balance, forKey: .balance)
        try container.encodeIfPresent(currenciesBalance, forKey: .currenciesBalance)
        try container.encode(lastActivity, forKey: .lastActivity)
        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(interfaces, forKey: .interfaces)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(isScam, forKey: .isScam)
        try container.encodeIfPresent(icon, forKey: .icon)
        try container.encodeIfPresent(memoRequired, forKey: .memoRequired)
        try container.encode(getMethods, forKey: .getMethods)
        try container.encodeIfPresent(isSuspended, forKey: .isSuspended)
        try container.encode(isWallet, forKey: .isWallet)
    }
}

