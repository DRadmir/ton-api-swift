//
// OracleBridgeParams.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OracleBridgeParams: Codable, JSONEncodable, Hashable {

    public var bridgeAddr: String
    public var oracleMultisigAddress: String
    public var externalChainAddress: String
    public var oracles: [Oracle]

    public init(bridgeAddr: String, oracleMultisigAddress: String, externalChainAddress: String, oracles: [Oracle]) {
        self.bridgeAddr = bridgeAddr
        self.oracleMultisigAddress = oracleMultisigAddress
        self.externalChainAddress = externalChainAddress
        self.oracles = oracles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bridgeAddr = "bridge_addr"
        case oracleMultisigAddress = "oracle_multisig_address"
        case externalChainAddress = "external_chain_address"
        case oracles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bridgeAddr, forKey: .bridgeAddr)
        try container.encode(oracleMultisigAddress, forKey: .oracleMultisigAddress)
        try container.encode(externalChainAddress, forKey: .externalChainAddress)
        try container.encode(oracles, forKey: .oracles)
    }
}

