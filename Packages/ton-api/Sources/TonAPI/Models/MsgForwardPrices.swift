//
// MsgForwardPrices.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MsgForwardPrices: Codable, JSONEncodable, Hashable {

    public var lumpPrice: Int64
    public var bitPrice: Int64
    public var cellPrice: Int64
    public var ihrPriceFactor: Int64
    public var firstFrac: Int64
    public var nextFrac: Int64

    public init(lumpPrice: Int64, bitPrice: Int64, cellPrice: Int64, ihrPriceFactor: Int64, firstFrac: Int64, nextFrac: Int64) {
        self.lumpPrice = lumpPrice
        self.bitPrice = bitPrice
        self.cellPrice = cellPrice
        self.ihrPriceFactor = ihrPriceFactor
        self.firstFrac = firstFrac
        self.nextFrac = nextFrac
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lumpPrice = "lump_price"
        case bitPrice = "bit_price"
        case cellPrice = "cell_price"
        case ihrPriceFactor = "ihr_price_factor"
        case firstFrac = "first_frac"
        case nextFrac = "next_frac"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(lumpPrice, forKey: .lumpPrice)
        try container.encode(bitPrice, forKey: .bitPrice)
        try container.encode(cellPrice, forKey: .cellPrice)
        try container.encode(ihrPriceFactor, forKey: .ihrPriceFactor)
        try container.encode(firstFrac, forKey: .firstFrac)
        try container.encode(nextFrac, forKey: .nextFrac)
    }
}

