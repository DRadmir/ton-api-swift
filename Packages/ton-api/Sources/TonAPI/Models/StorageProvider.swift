//
// StorageProvider.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct StorageProvider: Codable, JSONEncodable, Hashable {

    public var address: String
    public var acceptNewContracts: Bool
    public var ratePerMbDay: Int64
    public var maxSpan: Int64
    public var minimalFileSize: Int64
    public var maximalFileSize: Int64

    public init(address: String, acceptNewContracts: Bool, ratePerMbDay: Int64, maxSpan: Int64, minimalFileSize: Int64, maximalFileSize: Int64) {
        self.address = address
        self.acceptNewContracts = acceptNewContracts
        self.ratePerMbDay = ratePerMbDay
        self.maxSpan = maxSpan
        self.minimalFileSize = minimalFileSize
        self.maximalFileSize = maximalFileSize
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case acceptNewContracts = "accept_new_contracts"
        case ratePerMbDay = "rate_per_mb_day"
        case maxSpan = "max_span"
        case minimalFileSize = "minimal_file_size"
        case maximalFileSize = "maximal_file_size"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(address, forKey: .address)
        try container.encode(acceptNewContracts, forKey: .acceptNewContracts)
        try container.encode(ratePerMbDay, forKey: .ratePerMbDay)
        try container.encode(maxSpan, forKey: .maxSpan)
        try container.encode(minimalFileSize, forKey: .minimalFileSize)
        try container.encode(maximalFileSize, forKey: .maximalFileSize)
    }
}

