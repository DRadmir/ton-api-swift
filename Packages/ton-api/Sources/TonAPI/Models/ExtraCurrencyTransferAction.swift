//
// ExtraCurrencyTransferAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ExtraCurrencyTransferAction: Codable, JSONEncodable, Hashable {

    public var sender: AccountAddress
    public var recipient: AccountAddress
    /** amount in quanta of tokens */
    public var amount: String
    public var comment: String?
    public var encryptedComment: EncryptedComment?
    public var currency: EcPreview

    public init(sender: AccountAddress, recipient: AccountAddress, amount: String, comment: String? = nil, encryptedComment: EncryptedComment? = nil, currency: EcPreview) {
        self.sender = sender
        self.recipient = recipient
        self.amount = amount
        self.comment = comment
        self.encryptedComment = encryptedComment
        self.currency = currency
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sender
        case recipient
        case amount
        case comment
        case encryptedComment = "encrypted_comment"
        case currency
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sender, forKey: .sender)
        try container.encode(recipient, forKey: .recipient)
        try container.encode(amount, forKey: .amount)
        try container.encodeIfPresent(comment, forKey: .comment)
        try container.encodeIfPresent(encryptedComment, forKey: .encryptedComment)
        try container.encode(currency, forKey: .currency)
    }
}

